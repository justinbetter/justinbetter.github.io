<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog of Justin</title>
    <link>https://justinbetter.github.io/</link>
    <description>Recent content on Blog of Justin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Aug 2020 20:00:22 +0800</lastBuildDate>
    
	<atom:link href="https://justinbetter.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>算法题目汇总</title>
      <link>https://justinbetter.github.io/%E6%8A%80%E6%9C%AF/leetcode/</link>
      <pubDate>Sat, 15 Aug 2020 20:00:22 +0800</pubDate>
      
      <guid>https://justinbetter.github.io/%E6%8A%80%E6%9C%AF/leetcode/</guid>
      <description>归并排序 public class MergeSort { public static void merge(int[] a, int low, int mid, int high) { int[] temp = new int[high - low + 1]; int i = low;// 左指针  int j = mid + 1;// 右指针  int k = 0; // 把较小的数先移到新数组中  while (i &amp;lt;= mid &amp;amp;&amp;amp; j &amp;lt;= high) { if (a[i] &amp;lt; a[j]) { temp[k++] = a[i++]; } else { temp[k++] = a[j++]; } } // 把左边剩余的数移入数组  while (i &amp;lt;= mid) { temp[k++] = a[i++]; } // 把右边边剩余的数移入数组  while (j &amp;lt;= high) { temp[k++] = a[j++]; } // 把新数组中的数覆盖nums数组  for (int k2 = 0; k2 &amp;lt; temp.</description>
    </item>
    
    <item>
      <title>20个小时</title>
      <link>https://justinbetter.github.io/%E6%80%9D%E8%80%83/20hours/</link>
      <pubDate>Wed, 01 Jul 2020 20:00:22 +0800</pubDate>
      
      <guid>https://justinbetter.github.io/%E6%80%9D%E8%80%83/20hours/</guid>
      <description>20个小时 20个小时而已。即使你一开始完全不懂。 只要投入20个小时的时间专心学习某件事，就能提升到让你自己惊讶的水准。
20个小时就够了，大约就是每天45分钟，坚持上一个月，就能学会一项技能。
具体步骤 1. 技能分解 2. 自我纠正 3. 远离导致分心的障碍 4. 至少20小时  </description>
    </item>
    
    <item>
      <title>如何自律</title>
      <link>https://justinbetter.github.io/%E6%80%9D%E8%80%83/practise-self-discipline/</link>
      <pubDate>Sun, 10 May 2020 20:00:22 +0800</pubDate>
      
      <guid>https://justinbetter.github.io/%E6%80%9D%E8%80%83/practise-self-discipline/</guid>
      <description>  寻找强大动机
By finding his strong reason why
  专注约束自己做好一件事
developing his discipline through singular activities
  预先做好对付诱惑的计划
pre-planning for temptations
  </description>
    </item>
    
    <item>
      <title>优化自己的写作方式</title>
      <link>https://justinbetter.github.io/%E6%80%9D%E8%80%83/my-first-post/</link>
      <pubDate>Fri, 17 Apr 2020 11:00:22 +0800</pubDate>
      
      <guid>https://justinbetter.github.io/%E6%80%9D%E8%80%83/my-first-post/</guid>
      <description>发现没有什么动力去记录自己的思考。
纠结的地方有两点：
  优雅的输出环境
  适量的公众注意
   一直以来，我的写作流程是：
在本地的印象笔记完整输出 -&amp;gt;
修正必要的文字格式-&amp;gt;
分别拷贝到微信公众号、简书、知乎专栏、个人博客中。
 如果是这样的流程，每次当我想要动笔写作的时候，心里就会有一种负担：
 “呀？又要来这么一套复杂的工序？搞完以后还没几个人看，算了，没动力了，不写了！”  写作这种事情有很好的正向反馈，作者的动力才能不断持续下去。
 为了不让自己陷入困难的输出环境，我急需要简化自己的输出流程。
目的是为了提升自己的记录动力，不用每次都整这些幺蛾子。
 在搜索一大圈以后，我的方式修改为：
长文章博客在 github 输出，以便于形成一个完整的思考，符合优雅的输出环境；
短文章在微信上发布，吸取适量的公众注意。</description>
    </item>
    
    <item>
      <title>git常用规范</title>
      <link>https://justinbetter.github.io/%E6%8A%80%E6%9C%AF/git-common/</link>
      <pubDate>Mon, 15 Jul 2019 20:00:22 +0800</pubDate>
      
      <guid>https://justinbetter.github.io/%E6%8A%80%E6%9C%AF/git-common/</guid>
      <description>分支规范 - 分支规范 1. 分支命名规范： - master: 主线分支 - feature/xxxx: 功能需求开发分支 - hotfix/xxxx: bug 修复分支 - refactor/xxxx: 重构分支 2. 默认从主线分支 checkout 出功能需求 or bug 修复分支 3. 分支合并需要写清本次开发的内容点 - Commit Message 规范 1. 命名规则：func[(main)]: done something - 其中 `[ ]` 中的内容可以省略 2. func 规则： 1. feat: 新功能开发 2. fix: bug 修复 3. refactor: 不影响现有功能的重构 4. test: 添加测试 5. chore: 构建工具改动 6. style: 格式改动 3. 冒号（英文冒号，并空一格）后面写上这次 commit 提交的内容，最好一个小功能点一次提交 4. 禁止类似 `update` 这样无意义的提交！ 查看当前url git remote -v git remote set-url origin [url] git remote rm origin git remote add origin [url] git config user.</description>
    </item>
    
    <item>
      <title>Linux笔记</title>
      <link>https://justinbetter.github.io/%E6%8A%80%E6%9C%AF/linux-post/</link>
      <pubDate>Sat, 15 Jun 2019 20:00:22 +0800</pubDate>
      
      <guid>https://justinbetter.github.io/%E6%8A%80%E6%9C%AF/linux-post/</guid>
      <description>帮助手册命令 man man命令：可以通过一些参数，快速查询linux帮助手册，并且格式化显示。  ##Linux 下修改 root 密码方法 passwd root
权限 chgrp ：改变文件所属群组 chown -R：改变文件拥有者 chmod ：改变文件的权限, SUID, SGID, SBIT等等的特性	su - user1 切换身份user1  查看服务  /etc/services /etc/init.d/ 启动脚本处	/etc/* ：各服务各自的配置文件 service --status-all 查看所有服务  常用目录 /etc 主要配置文件 /bin 常用执行文件 /sbin 重要的系统执行文件 /dev 存放设备文件 /dev/null 垃圾桶 /home 用户目录 /media /mnt 挂载外部装置 /opt 第三方协议软件 习惯放/usr/local /proc 虚拟文件，存放内存数据:系统cpu、网络.. / (root, 根目录)： 与开机系统有关； /usr (unix software resource)：与软件安装/执行有关； /usr/local/ 自己下载的软件安装目录 /var (variable)： 与系统运作过程有关的常态性变动的文件：缓存、log等。 /etc/issue 配置开机画面显示 /etc/motd 配置登录显示 /etc/ssh/sshd_config ssh配置 ~/.</description>
    </item>
    
    <item>
      <title>读和时间作朋友</title>
      <link>https://justinbetter.github.io/%E6%80%9D%E8%80%83/readtime/</link>
      <pubDate>Sun, 03 Mar 2019 20:00:22 +0800</pubDate>
      
      <guid>https://justinbetter.github.io/%E6%80%9D%E8%80%83/readtime/</guid>
      <description>看完一本对自己有价值的书--李笑来先生的《和时间作朋友》，总想说点什么。 一开始其实并没有想写这篇文章的冲动，我自己认为我的文笔不算好（样本数量屈指可数的情况下），也没有几个朋友有阅读我文章的冲动，加上主要原因--懒惰，就更没有写的必要了。 为什么又下笔了呢？实在是有与人诉说的需求没有得到满足，本来嘛，一本书写的好，鸡汤满满，整的你热血沸腾的，出于善意的思维，你总是想分享给你的朋友，他们看了，也热血沸腾的，就完事了。于是当我满心欢喜地安利给我的一些朋友以后，我想当然地认为以我不差的审美，他们总该会翻翻看看，了解个大概，再决定是否有精读的必要。结果却并不如此。 我开始思考为什么会出现这样的现象？ 是我不了解他们吗？是不明白他们真正的需要吗？还是他们正处在一个非常繁忙的局面，没有闲暇去读你觉得有价值的东西？抑或只是懒惰罢了？ 我思考后的感悟是，人一生的很多时候会选择相信自己，而不会轻易去听别人的。即便是成功如马云、雷军、李笑来那样的一帮人，推荐自己深有感触的价值读物，依然会有很多人质疑。 下面是我整理的读书笔记。 我们很多人常常面临无法按计划完成任务的困境，生活中的噪音无时无刻不在影响着你的专注力，我们能做的是接受现实，提高心智，相信积累的力量，这是本书的开头。 首先解释了心智的概念：过往获得的一切知识及经验的总和。 心智只要开启了，无论正反，都会自我积累，自我过滤，根深蒂固。而我们以往的经验局限，可能会融入心智，造成拒绝学习的判断，所以为了摆脱局限，我们需要正向地提升自己的心智力量。 如何提高心智？ 开始接受当前现状，在“任务速成”绝无可能的情况下，用自己有的去交换自己要的，如果啥都没有，只能毫不怀疑地相信努力勤奋总会有的。接受现状才是最优策略。 面临的困难？ 由于侯士达法则：完成任务花费的时间总会超过计划的时间--主要原因在于任务有熟悉和陌生的区别。我们要做的是判断任务熟悉程度，接受一定的未知，立即行动。 在行动的过程中不要假装很努力，因为真正重要的事情也会面临枯燥无味，学会三思而后行，what why how，在行动过程中可以考虑把一个非机械的任务和机械的任务并行搭配，养成精细拆分任务的习惯，提高效率。 如果面临焦虑，可以参考柳比歇夫先生的事件时间日志的方式，通过记录自己的时间流量，感知到时间流逝，战胜自己的焦虑。 执行任务的策略？ 定制良好的计划，计划的目的是为了验收，任务执行结束后，对比自己之前记录的标准，想想。 如何学习的主要手段：试错、观察、阅读、正确的思考，同时要考虑个体和群体的经验局限；一个人的自学能力依赖于阅读理解、检索能力、写作能力以及实践能力，永远保持开放的心态，不要‘选择性输入’，只看到自己想看的。 了解一些逻辑常识？ 把权威当作辅助工具。避免一些基础概念不清、因果颠倒、命题关系不分、举证责任、偷换概念等错误，理解双盲测试的概念（病人对药物判断的隔离、工作人员对分发药物的隔离）。 人类普遍拥有的一个认知偏差就是：把成功揽到自己身上，把失败归咎于别人或者坏运气。（这在心理学上有个术语，叫做“自利性偏差(Self-servingBias)”。与其关注成功者，不如多吸取失败者的经验。 道理都明白，可就是做不到的？原因是恐惧和懦弱。办法只有克服。 最好提高一些沟通能力？ 学会倾听，等到对方把话说完再质疑；通过努力、积累成为能说更多话的人，想办法不时做出令人敬佩的事情，就会有人主动找你做朋友；讨论需要双方遵守理性讨论基本原则，真理是独立于个人和群体的，不同变化的只是人们对真理的解释和理解。 往往并不是有兴趣才能做好，而是做好了才有兴趣？ 如何做好？正确的策略加重复。遇到痛苦怎么办？利用大脑的遗忘机制转移痛苦。重复犯错？这是遗忘机制的副作用，可以用文字、图片的方式记录自己当时的尴尬，提醒自己不要去犯同样的错误。 最后提了一些感悟： 浪费时间、虚度年华的人，有一个共同的特征——拼命想控制自己完全不能控制的事物，却在自己真正能掌控的地方彻底失控；不要这样，结果已经在你积累的过程中体现。 接受一个关于运气的现实：概率是独立于任何人存在的，因此绝对不会仅因为我的期望就发生任何变化。 利用鸡尾酒会效应，记录自己可能需要的信息方向，遇到相关信息时注意力就会被潜意识关注。灵巧的勤奋才能迸发灵感。 永远鼓励身边的人，大多数人是以泼水为乐的，别作大多数。 努力的过程中不要忘记给自己留有空间。 选择意味着放弃，选择之前确定自己想要什么。 找到正确的节奏，凡是值得做的事情，都值得慢慢去做，做很久很久。 为值得的人提供帮助。不要试图证明自己，结果反而会适得其反。 大体上来说，这是一本激励人心的书，看完以后倍感热血，对于冷漠太久的内心不算坏事。 最后想想，为什么一定要别人听我的呢？还是心智力量不足啊。想想我分享了美好的东西，这东西本身就是美好的，又哪里缺少欣赏的人呢。 如今我已经记录下来这些感想，至少有个地方听到了。  </description>
    </item>
    
  </channel>
</rss>